name: Bump Version on Merge

on:
  pull_request:
    branches: [ develop ]
    types: [closed]

jobs:
  version-bump:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: develop

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Fetch Latest History
      run: git fetch

#    - name: Bump Minor Version
#      run: npm version minor --no-git-tag-version

    - name: Bump version and push tag
      id: tag
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        PR_TITLE="${{ github.event.pull_request.title }}"

        # Determine version type from PR title
        if [[ "$PR_TITLE" == *"[major]"* ]]; then
          VERSION_TYPE="major"
        elif [[ "$PR_TITLE" == *"[minor]"* ]]; then
          VERSION_TYPE="minor"
        else
          VERSION_TYPE="patch"
        fi

        # Bump version
        VERSION=$(npm version $VERSION_TYPE -m "release: %s")
        # VERSION=$(node -p "require('./package.json').version")

        # Get release notes based on the tags
        echo "version=$VERSION" >> $GITHUB_OUTPUT

        # Push the tag and changes
        # git push origin --tags
        # git push

    - name: Commit and Push
      env:
        VERSION: ${{ steps.tag.outputs.version }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -am "chore: Bump version ${VERSION}"
        git push

    # Additional steps for handling merged feature branches
    # - name: Merge back to feature branches (if necessary)
    #   run: |
    #     git fetch origin
    #     git merge origin/develop your_feature_branch
    #     git push origin your_feature_branch

